---
#- name: update apt's cache
#  apt: update_cache=yes

- name: install syslog-ng
  apt: name=syslog-ng-core state=present
  when: ansible_os_family == 'Debian'
  notify:
  - start syslog-ng

- name: install syslog-ng
  yum: name=syslog-ng state=present
  when: ansible_os_family == 'RedHat'
  notify:
  - start syslog-ng

- name: install syslog-ng
  pkgng: name=syslog-ng state=present
  when: ansible_os_family == 'FreeBSD'
  notify:
  - start syslog-ng

- name: determine syslog-ng's config version
  shell: "syslog-ng --version | head -n 1 | awk '{ print $2}' | cut -c 1-3"
  register: determined_config_version
  when: syslog_ng_config_version_auto_detect == true

- name: set syslog_ng_config_version variable
  set_fact: syslog_ng_config_version={{ determined_config_version.stdout }}
  when: syslog_ng_config_version_auto_detect == true

- include_vars: "../defaults/syslog-ng/{{syslog_ng_config_version}}/main.yml"

- name: "applying {{ syslog_ng_mode }} mode configuration if the generated syntax is OK"
  when: syslog_ng_check_syntax_before_reload == true
  template:
    src="{{syslog_ng_mode}}.j2"
    dest="{{syslog_ng_config_file}}"
    owner="{{syslog_ng_user}}"
    group="{{syslog_ng_group}}"
    validate='syslog-ng --syntax-only --cfgfile %s'
  notify:
  - reload syslog-ng

# this does't check the syntax before reloads
- name: "applying {{ syslog_ng_mode }} mode configurations without checking syntax"
  when: syslog_ng_check_syntax_before_reload != true
  template:
    src="{{syslog_ng_mode}}.j2"
    dest="{{syslog_ng_config_file}}"
    owner="{{syslog_ng_user}}"
    group="{{syslog_ng_group}}"
    validate='syslog-ng --syntax-only --cfgfile %s'
  notify:
  - reload syslog-ng

